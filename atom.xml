<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://dream1ce.github.io</id>
    <title>Learning Bolg</title>
    <updated>2020-05-06T08:40:29.241Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://dream1ce.github.io"/>
    <link rel="self" href="https://dream1ce.github.io/atom.xml"/>
    <subtitle>偏见比无知离真相更远</subtitle>
    <logo>https://dream1ce.github.io/images/avatar.png</logo>
    <icon>https://dream1ce.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Learning Bolg</rights>
    <entry>
        <title type="html"><![CDATA[Cameras, Lenses and Light Fields]]></title>
        <id>https://dream1ce.github.io/post/cameras-lenses-and-light-fields/</id>
        <link href="https://dream1ce.github.io/post/cameras-lenses-and-light-fields/">
        </link>
        <updated>2020-04-25T01:59:04.000Z</updated>
        <content type="html"><![CDATA[<p>对于图形学的所有应用来讲，特别是在三维空间中的应用，我们到了最后一定离不开的一点就是成像，既然是成像那么就离不开成像设备。</p>
<h1 id="成像方式">成像方式</h1>
<p>在了解成像方式之前，我们需要解释一下我们人眼是如何看到物体的。做个简单的解释，人看到物体的像是通过瞳孔将物体投影到视网膜上，因此我们才看到了物体，如果没有瞳孔直接由视网膜来成像那么就会出现，在我们看到的同一位置，会有多个反射的光线叠加，因此最终成像会出现一种过曝的现象。<br>
所以个人认为物体要能在一个传感器上有像呈现，那么必须对于特定方向上来的光只让其投影在传感器的特定方向。<br>
因此我们也就能比较直观的感受目前成像的两种方式。</p>
<h3 id="小孔成像">小孔成像</h3>
<p>好难解释直接上图<br>
<img src="https://dream1ce.github.io/post-images/1587783301892.png" alt="" loading="lazy"><br>
我们平时常说的针孔相机用的就是这个原理。</p>
<h3 id="透镜成像">透镜成像</h3>
<p>这个原理就是我们现在常用的照相机，利用透镜将一个不同方向的光投射在同一个点上。<br>
<img src="https://dream1ce.github.io/post-images/1587783772432.png" alt="" loading="lazy"></p>
<h3 id="一些专用的术语">一些专用的术语</h3>
<p><strong>FOV:</strong> 是视场？？不是很懂学摄影的应该知道。<br>
<img src="https://dream1ce.github.io/post-images/1587784407223.png" alt="" loading="lazy"></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>O</mi><mi>V</mi><mo>=</mo><mn>2</mn><mi>arctan</mi><mo>⁡</mo><mfrac><mi>h</mi><mrow><mn>2</mn><mi>f</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">FOV = 2 \arctan{\frac{h}{2f}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.25188em;vertical-align:-0.8804400000000001em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">arctan</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></span></p>
<p><strong>Exposure(曝光):</strong> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo>=</mo><mi>T</mi><mo>×</mo><mi>E</mi></mrow><annotation encoding="application/x-tex">H=T\times E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span><br>
其中T表示曝光时间时间，E表示曝光，这个和很多因素都有关系，包括光圈的大小 ，快门的速度，ISO</p>
<h1 id="light-field-光场">Light Field (光场)</h1>
<h2 id="the-plenopic-function全光函数">The Plenopic Function全光函数</h2>
<p>全光函数表示我们能看到的所有光线（景物所反射的）。<br>
如果你只站在一个点那么全光函数可以写成：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>(</mo><mi>θ</mi><mo separator="true">,</mo><mi>ϕ</mi><mo separator="true">,</mo><mi>λ</mi><mo separator="true">,</mo><mi>t</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">P(\theta , \phi , \lambda, t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϕ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">λ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span><br>
但是如果你可以走动那么全光函数可以扩展为：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>(</mo><mi>θ</mi><mo separator="true">,</mo><mi>ϕ</mi><mo separator="true">,</mo><mi>λ</mi><mo separator="true">,</mo><mi>t</mi><mo separator="true">,</mo><msub><mi>V</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>V</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>V</mi><mi>z</mi></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">P(\theta , \phi , \lambda, t, V_x, V_y,V_z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϕ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">λ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><br>
所以有这个函数我们能表示我们看到的所有。</p>
<h2 id="光场定义">光场定义</h2>
<p>由此全光函数我们可以得到启发。<br>
其实我们看到的所有光线都可以被归纳为两个参数的直线。<br>
那么从不同方向上看这个物体，就可以被分解为不同方向的光线，这些不同方向上的光线组成了我们所谓的光场。 根据光线的这种性质，我们可以用两个平面来确定光场。</p>
<h2 id="光场应用">光场应用</h2>
<p>光场相机、苍蝇的复眼。<br>
光场相机能让你在拍照之后对聚焦什么的参数进行修改。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Computation]]></title>
        <id>https://dream1ce.github.io/post/computation/</id>
        <link href="https://dream1ce.github.io/post/computation/">
        </link>
        <updated>2020-04-24T13:44:39.000Z</updated>
        <content type="html"><![CDATA[<p>对于数据结构和算法而言我们主要研究的对象是计算，研究藏在计算当中的规律和技巧。同时我们还要保证计算的有效性和高效性(用更低的代价更快的实现计算)的目标。<br>
引用Dijkstra的一句化：<strong>Computer science should be called computing science, for same reason why surgery is not called knife science.</strong></p>
<h2 id="计算等于信息的处理">计算等于信息的处理</h2>
<p>其实就是借助某种工具，按照一种规律，明确且机械的步骤执行。<br>
算法就是在特定计算模型之下，用来解决特定问题的指令序列。<br>
其拥有以下特性：<br>
<strong>输入</strong>：待处理的信息<br>
<strong>输出</strong>：处理完成之后的信息<br>
<strong>正确性</strong>：能解决指定问题<br>
<strong>确定性</strong>：每个算法都可以被描述为语义明确的基本操作序列<br>
<strong>可行性</strong>：每个操作都能在常数的范围内实现。<br>
<strong>有穷性</strong>：对于任意输入，都可以在有限次的步数之中实现。</p>
<h2 id="有穷性">有穷性</h2>
<p>其实对于一个算法来讲有穷性不是那么好确认的，例如NP问题，算法什么时候结束是不确定的，并且在一定的程度上是由输入决定的，且我们尚且无法证明对于所有的输入这个算法是否都能具有有穷性。<br>
因此我们可以推断出，程序不等于算法，这其实也显而易见例如我们常常写出来的死循环，其就是程序但是不是算法，同时一些虽然能解决问题但是有穷性不能证明的程序，也无法定义它是不是算法。</p>
<h1 id="小结">小结</h1>
<p>Algorithm + Data Structure = Program<br>
Program <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">\times</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">×</span></span></span></span> Efficiency = Computing</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Materials and Appearances]]></title>
        <id>https://dream1ce.github.io/post/materials-and-appearances/</id>
        <link href="https://dream1ce.github.io/post/materials-and-appearances/">
        </link>
        <updated>2020-04-24T01:48:27.000Z</updated>
        <content type="html"><![CDATA[<p>写在最开始：我们在光线追踪之中提到了BRDF（Bidirectional Reflection Distribution Function）,所以我们要明白所谓的Materials就等于BRDF。</p>
<h1 id="material">Material</h1>
<h3 id="diffuselambertian-material">Diffuse/Lambertian Material</h3>
<p>对于一个完全不吸收能量的材质，而且其能量为均匀散发。那么根据公式我们可得：$L_0(https://dream1ce.github.io/post-images/1587699552112.png)</p>
<h3 id="glossy-material粗糙镜面">Glossy Material（粗糙镜面）</h3>
<p>粗糙镜面往往可以用来形容抛光的金属。<br>
<img src="https://dream1ce.github.io/post-images/1587699705306.png" alt="" loading="lazy"></p>
<h3 id="glasswater-material">Glass/Water Material</h3>
<figure data-type="image" tabindex="1"><img src="https://dream1ce.github.io/post-images/1587699805827.png" alt="" loading="lazy"></figure>
<h3 id="microfacet-theory">Microfacet Theory</h3>
<p>当我们离一个物体很远的时候，我们看物体都是一个平面，只有离近了之后才能看到凹凸不平的表面。即从远处看看到的是外观，近处看看到的才是几何。<br>
我们可以通过观察微表面的法线分布来，估计远离平面时我们看到的效果，同时我们也可以通过微表面的法线分布来判断物质的粗糙程度。</p>
<h3 id="isottropicanisotropic-material">Isottropic/Anisotropic Material</h3>
<p>如果一个材质在一个方向上被打磨，那么其分布的法线向量也会有极大的差别，同一束光线达到上面也会有所不同。<br>
<img src="https://dream1ce.github.io/post-images/1587702577312.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ray Tracing： Monte Carlo Path Tracing]]></title>
        <id>https://dream1ce.github.io/post/ray-tracing-mote-carlo-path-tracing/</id>
        <link href="https://dream1ce.github.io/post/ray-tracing-mote-carlo-path-tracing/">
        </link>
        <updated>2020-04-23T02:17:09.000Z</updated>
        <content type="html"><![CDATA[<h1 id="monte-carlo-integration蒙特卡洛积分">Monte Carlo Integration（蒙特卡洛积分）</h1>
<p>在上文我们得出了一个非常复杂的积分表达式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo>∫</mo><msup><mi>H</mi><mn>2</mn></msup></msub><msub><mi>f</mi><mi>r</mi></msub><mo>(</mo><mi>p</mi><mo separator="true">,</mo><msub><mi>w</mi><mi>i</mi></msub><mo>→</mo><msub><mi>w</mi><mi>r</mi></msub><mo>)</mo><msub><mi>L</mi><mi>i</mi></msub><mo>(</mo><mi>p</mi><mo separator="true">,</mo><msub><mi>w</mi><mi>i</mi></msub><mo>)</mo><mo>(</mo><mi>n</mi><mo>⋅</mo><msub><mi>w</mi><mi>i</mi></msub><mo>)</mo><mi mathvariant="normal">d</mi><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\int_{H^2}f_r(p,w_i\to w_r)L_i(p,w_i)(n\cdot w_i)\mathrm{d}w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1608200000000002em;vertical-align:-0.35582em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16659999999999997em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35582em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,那么如何解这个式子呢？如果使用解析解像一般的积分去解是十分困难的，但是我们也不需要得到解析解，我们只需得到大概的数值即可。所以我们可以用蒙特卡洛积分来解。<br>
<strong>作用：</strong> 蒙特卡洛积分就是求一个积分的数值解，即求一个定积分。<br>
<strong>思想：</strong> 之前我们学过黎曼积分，<strong>黎曼积分</strong>的思想就是把一个函数图像分为一个个小长条加和，只要长条够细那么就能得出具体的图像，<strong>蒙特卡洛积分</strong>利用了依概率收敛的想法，我们只要取足够多的点取函数值乘以范围求和取平均，只要点够多的时候其值会自动收敛到我们想要的那个值。<br>
<strong>式子：</strong> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>N</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><mfrac><mrow><mi>f</mi><mo>(</mo><msub><mi>X</mi><mi>i</mi></msub><mo>)</mo></mrow><mrow><mi>p</mi><mo>(</mo><msub><mi>X</mi><mi>i</mi></msub><mo>)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">F_N = \frac{1}{N}\sum_{i=1}^N\frac{f(X_i)}{p(X_i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.07847em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.07847em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br>
光线追踪中采样的面积是一个半圆。</p>
<h1 id="global-illumination全局光照">Global Illumination（全局光照）</h1>
<p>以上我们已经解出了具体数值，但是还有一个问题全局光照是光线经过多次反射所得，如果一个点的颜色由很多条光线决定，这些光线又由很多个面反射而来，反射而来的每一条光线又可以进一步的分解（这里很明显就是一个问题的子问题可以用<strong>递归</strong> 来解决），就会造成计算量的爆炸。</p>
<h3 id="path-tracing">Path Tracing</h3>
<p>那么如何解决呢？ 我们在采样的时候认为光线是从<strong>一个方向</strong> 上来的即可解决计算量爆炸的问题。<br>
这个就是一般的路径追踪的算法。<br>
路径追踪不仅仅只有这个方法还有 Distributed Path Tracing等方法。<br>
当然这样仍然存在问题，那就是作为一个递归的算法什么时候算结束呢？如果场景中物体很多就会造成无限递归的问题。如何解决呢？那就是俄罗斯轮盘赌，假设光线又p的几率可以反射，否则被吸收不反射，那反射之后的值是多少?<strong>Lo/p</strong>其中Lo为反射的颜色。<br>
为什么是这个式子呢？因为我们希望在经历轮盘赌算法以后，其期望仍然能是Lo，则期望就是：<br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>=</mo><mi>P</mi><mo>(</mo><mi>L</mi><mi>o</mi><mi mathvariant="normal">/</mi><mi>p</mi><mo>)</mo><mo>+</mo><mo>(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo>)</mo><mo>∗</mo><mn>0</mn><mo>=</mo><mi>L</mi><mi>o</mi></mrow><annotation encoding="application/x-tex">E=P(Lo/p)+(1-p)*0=Lo</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord">/</span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span></span></span></span>所以反射的值为<strong>Lo/p</strong></p>
<h1 id="sampling-the-light">Sampling the Light</h1>
<p>当我们进行采样的时候，会发现当光源很少的时候，我们采样的光线很大程度上会被浪费，那么在此作优化，如果我们从光源上进行采样，那么我们就能让光线不浪费的被探查到，那么如何采样光源呢？就涉及到积分变换了。将光源投影到半球面上，从投影的半球面来进行采样。<br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">d</mi><mi>w</mi><mo>=</mo><mfrac><mrow><mi mathvariant="normal">d</mi><mi>A</mi><mi>c</mi><mi>o</mi><mi>s</mi><mo>(</mo><msup><mi>θ</mi><mo mathvariant="normal">′</mo></msup><mo>)</mo></mrow><mrow><mo>∥</mo><msup><mi>X</mi><mo mathvariant="normal">′</mo></msup><mo>−</mo><mi>X</mi><msup><mo>∥</mo><mn>2</mn></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\mathrm{d}w = \frac{\mathrm{d}Acos(\theta&#x27;)}{\lVert X&#x27;-X\rVert ^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.58448em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.06448em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">∥</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">X</span><span class="mclose mtight"><span class="mclose mtight">∥</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">d</span></span><span class="mord mathdefault mtight">A</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">s</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>
<h1 id="目前学术界的研究">目前学术界的研究</h1>
<ul>
<li>The general solution of light transport</li>
<li>(Unidirectional &amp; bidirectional) path tracing</li>
<li>Photon mapping</li>
<li>Metropolis light transport</li>
<li>VCM/UPBP</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ray Tracing: Radiometric && Light Transport]]></title>
        <id>https://dream1ce.github.io/post/ray-tracing-radiometric/</id>
        <link href="https://dream1ce.github.io/post/ray-tracing-radiometric/">
        </link>
        <updated>2020-04-18T02:09:31.000Z</updated>
        <content type="html"><![CDATA[<p>过去的光线追踪计算光照传播的算法往往只是简单的遇到镜面反射面就反弹，遇到漫反射面就吸收不反弹，但是真实的光线反射并不是如此，因此要引入在物理发明发现的辐射度量学，来让光线的显示更加的真实。</p>
<h1 id="名词介绍">名词介绍</h1>
<p><strong>Radiant flux（辐射通量）、Intensity(强度)、Irradiance（辐照度）、radiance（辐射率）</strong></p>
<h3 id="radiant-flux">Radiant flux</h3>
<p>Radiant flux 是表示每单位时间的辐射能量，亦作“辐射功率”。单位是：瓦特</p>
<h3 id="intensity">Intensity</h3>
<p>Intensity 是指每单位立体角的辐射通量。单位是：瓦特每球面度。</p>
<blockquote>
<p>立体角的定义：立体角是以锥体的顶点为球心作球面，该锥体在球的表面的面积与球半径平方之比，单位为球面度。</p>
</blockquote>
<h3 id="irradiance">Irradiance</h3>
<p>Irradiance是指入射表面的辐射通量。单位是：瓦特每平方米。用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mi>i</mi></msub><mo>(</mo><msub><mi>w</mi><mi>i</mi></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">E_i(w_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>来表示。</p>
<h3 id="radiance">Radiance</h3>
<p>Radiance是指每单位立体角每单位投射表面的辐射通量。用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mi>r</mi></msub><mo>(</mo><msub><mi>w</mi><mi>r</mi></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">L_r(w_r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>来表示。</p>
<h3 id="辐射度量学的研究范围">辐射度量学的研究范围</h3>
<p>辐射度量学大部分的定义都是定义在一个半球面上的，可以这么理解辐射是从四面八方辐射而来，所以对于一个表面上的一个点我们的研究范围自然也是其上面的半球面。实际上辐射度量学的名词还有很多在此不一一列举，以上的名词在光线追踪中已经够用。</p>
<h1 id="光线追踪中的使用">光线追踪中的使用</h1>
<p>先要明白以上名词对应光线追踪中的那一部分<br>
<strong>Radiant Intensity</strong>对应<strong>光线的照射（强度）</strong>、<strong>Irradiance</strong>对应<strong>光线落在平面上</strong>、<strong>Radiance</strong>对应<strong>光线在物体间的辐照</strong>。<br>
由此我们可以看出作为光线追踪里面最重要的两个概念就是，光线打进去（<strong>Irradiance</strong>）光线再射出来（<strong>Radiance</strong>），由这两个过程我们能得出某个点的颜色具体要如何计算。但是再此之前仍有一个概念需要介绍。</p>
<h3 id="bidrectional-reflection-distribution-functionbrdf">Bidrectional Reflection Distribution Function（BRDF）</h3>
<p>BDRF表示光从远处一个角度打进来再某一个角度来看又有多少光反射出去。<br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi>r</mi></msub><mo>(</mo><msub><mi>w</mi><mi>i</mi></msub><mo>→</mo><msub><mi>w</mi><mi>r</mi></msub><mo>)</mo><mo>=</mo><mfrac><mrow><mi mathvariant="normal">d</mi><msub><mi>L</mi><mi>r</mi></msub><mo>(</mo><msub><mi>w</mi><mi>r</mi></msub><mo>)</mo></mrow><mrow><mi mathvariant="normal">d</mi><msub><mi>E</mi><mi>i</mi></msub><mo>(</mo><msub><mi>w</mi><mi>i</mi></msub><mo>)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">f_r(w_i\to w_r) = \frac{\mathrm{d}L_r(w_r)}{\mathrm{d}E_i(w_i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">d</span></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">d</span></span><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br>
通俗理解就是一束光从某个角度入射其反射光线的分布函数。</p>
<h3 id="rendering-equation">Rendering Equation</h3>
<p>终于到了最终渲染的正题，由之前我们的分析我们可以直观的得出渲染方程：<br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mi>i</mi></msub><mo>(</mo><mi>p</mi><mo separator="true">,</mo><msub><mi>w</mi><mi>r</mi></msub><mo>)</mo><mo>=</mo><msub><mi>L</mi><mi>e</mi></msub><mo>(</mo><mi>p</mi><mo separator="true">,</mo><msub><mi>w</mi><mn>0</mn></msub><mo>)</mo><mo>+</mo><msub><mo>∫</mo><msup><mi>H</mi><mn>2</mn></msup></msub><msub><mi>f</mi><mi>r</mi></msub><mo>(</mo><mi>p</mi><mo separator="true">,</mo><msub><mi>w</mi><mi>i</mi></msub><mo>→</mo><msub><mi>w</mi><mi>r</mi></msub><mo>)</mo><msub><mi>L</mi><mi>i</mi></msub><mo>(</mo><mi>p</mi><mo separator="true">,</mo><msub><mi>w</mi><mi>i</mi></msub><mo>)</mo><mo>(</mo><mi>n</mi><mo>⋅</mo><msub><mi>w</mi><mi>i</mi></msub><mo>)</mo><mi mathvariant="normal">d</mi><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">L_i(p,w_r) = L_e(p,w_0)+\int_{H^2}f_r(p,w_i\to w_r)L_i(p,w_i)(n\cdot w_i)\mathrm{d}w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1608200000000002em;vertical-align:-0.35582em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16659999999999997em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35582em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br>
其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mi>e</mi></msub></mrow><annotation encoding="application/x-tex">L_e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为自发光项，如果物体本身并不发光那么<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mi>e</mi></msub></mrow><annotation encoding="application/x-tex">L_e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为0。<br>
其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为光线的传播，不仅仅包括光源还包括光线反射达到物体的光线。<br>
有了渲染方程，下一步我们就是要去解这个方程了，如何去解？请见下回</p>
<h3 id="算子展开">算子展开</h3>
<p>在知道了渲染方程后，我们可以将其以算子的方式展开：<br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo>=</mo><mi>E</mi><mo>+</mo><mi>K</mi><mi>E</mi><mo>+</mo><msup><mi>K</mi><mn>2</mn></msup><mi>E</mi><mo>+</mo><msup><mi>K</mi><mn>3</mn></msup><mi>E</mi><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">L = E + KE + K^{2}E+K^{3}E+...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.10556em;vertical-align:0em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span></span></span></span><br>
E为自发光。<br>
EK为光线照射。<br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>K</mi><mn>2</mn></msup><mi>E</mi></mrow><annotation encoding="application/x-tex">K^{2}E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>为光线一次弹射达到物体上的光线。<br>
由此我们知道光照是由光线在物体表面多次反射而来，那么我们就能引入一个全局光照的概念。<br>
具体可以上WiKipedia上去查。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ray Tracing:Whitted-Style]]></title>
        <id>https://dream1ce.github.io/post/ray-tracingwhitted-style/</id>
        <link href="https://dream1ce.github.io/post/ray-tracingwhitted-style/">
        </link>
        <updated>2020-04-15T12:31:04.000Z</updated>
        <content type="html"><![CDATA[<p>在了解光线追踪之前，先要明白光栅化的阴影是怎么做的，有什么缺陷。</p>
<h1 id="shadow-mapping光栅化的阴影">Shadow Mapping（光栅化的阴影）</h1>
<p><strong>主要思想：</strong> 所谓阴影就是你看的到但是光看不到的部分。<br>
<strong>处理步骤：</strong> 根据主要思想那么很容易的出如何产生阴影，就是先将camera防止在光源出进行一次观测，记录场景的深度，之后再把camera放在实际视角位置进行观测，最后在进行光栅化的时候查询对应像素的深度看是否被物体遮挡，没被遮挡的就正常显示，否则为阴影。<br>
<strong>缺陷：</strong></p>
<ol>
<li>阴影质量取决于Shadow Mapping 的采样点个数如果采样点太少那么就会在阴影产生锯齿，采样点过多就需要大量的计算。</li>
<li>Shadow Mapping 只能用于单个点光源。（PS： 有一些处理的方法可以用于多个点光源，但是计算量会大幅增加，直到不可控）。</li>
<li>阴影边缘明显无法生成软阴影，根据思想易得，而显示中大部分是软阴影。<br>
由以上的缺点我们直到，最好让光线决定我们能看到什么而不是设计一种简化模型来计算物体表面是什么颜色。<br>
#Whitted-Style Ray Tracing<br>
首先我们要明白光线追踪，光线有什么性质。<br>
###光线的性质</li>
<li>沿直线传播</li>
<li>光线与光线之间不会发生碰撞。（这条仅限与一些简单的模型，复杂模型中还会考虑光的波动性）</li>
<li>如果有一条光线能从光源到眼睛，那么也能找到一条射线从眼睛到光源，且这两条路线相等。</li>
</ol>
<h3 id="光追思想">光追思想</h3>
<p>由以上的光的性质那么思想就很容易确定下来，从Camera出发每个像素点发射一条射线，由射线打到的面上的某点计算光源对于这个点应该反应的是什么颜色，同时射线还会反射，这点也要计算。那么问题就被分解为求光线和表面的交点，求出焦点像素的颜色。最后显示的颜色即可。<br>
颜色其实无所谓由Texture来决定颜色，实际上的问题是求光线和表面的交点。</p>
<h3 id="光线求交">光线求交</h3>
<p>由于几何的显示有两种方式所以光线和表面求交有两种方式：显式求交和隐式求交<br>
<strong>隐式求交：</strong> 直接将光线的方程带入二次方程，之后解二次方程即可。<br>
<strong>显示求交：</strong> 在这里以三角形作为平常的面。那么就叫问题可以分两个步骤来计算。</p>
<ol>
<li>假设三角平面是一个无限延申的平面，那么先求射线和这个平面的交点</li>
</ol>
<blockquote>
<p>利用点向式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>x</mi><mo>+</mo><mi>b</mi><mi>y</mi><mo>+</mo><mi>c</mi><mi>z</mi><mo>=</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">ax+by+cz=d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span> 和射线的参数方程可以得到交点</p>
</blockquote>
<ol start="2">
<li>之后判断这和交点是不是在相应的三角形内。</li>
</ol>
<blockquote>
<p>利用叉乘的性质判断点是不是在不同三角向量的同一侧即可。可参考Möller–Trumbore算法<br>
显示求交点会有一个困难，就是每条光线对所有三角形都要求交时间复杂度太大，效率低下，因此要提出一种加速结构。</p>
</blockquote>
<h3 id="加速结构">加速结构</h3>
<p>在一个场景中对于某个物体其实大部分光线都不会达到这个物体，就好比足球场中的一个篮球。在这种情况下还要判断每个面效率就降下来了，所以要进行一定的优化。<br>
<strong>Bounding Volumes(包围盒):</strong> 思想就是将整个模型用三对面（x,y,z各一对），如果光线无法达到包围盒，那么就更不用说里面的物体和面了。</p>
<blockquote>
<p>如何计算光线是否会到达包围盒呢？<br>
计算每对面的最晚进入时间<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>e</mi></msub><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">t_enter</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>和每对面的最早离开时间<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>e</mi></msub><mi>x</mi><mi>i</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">t_exit</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span></span></span></span>,如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>e</mi></msub><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi><mo>&lt;</mo><msub><mi>t</mi><mi>e</mi></msub><mi>x</mi><mi>i</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">t_enter&lt;t_exit</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span></span></span></span>那么表示光线经过了物体。</p>
</blockquote>
<p>在包围和中还有一种<strong>Axis-Aligned(坐标对齐)</strong> 的优化方法，就是把包围和的三个对面和相应的坐标轴形成的面平行。</p>
<blockquote>
<p>不优化：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>=</mo><mfrac><mrow><mo>(</mo><msup><mi>p</mi><mo mathvariant="normal">′</mo></msup><mo>−</mo><mn>0</mn><mo>)</mo><mo separator="true">⋅</mo><mi>N</mi></mrow><mrow><mi>d</mi><mo separator="true">⋅</mo><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">t = \frac{(p&#x27;-0)·N}{d·N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.40948em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.06448em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mpunct mtight">⋅</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">0</span><span class="mclose mtight">)</span><span class="mpunct mtight">⋅</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br>
优化后：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>=</mo><mfrac><mrow><msubsup><mi>p</mi><mi>x</mi><mo mathvariant="normal">′</mo></msubsup><mo>−</mo><mn>0</mn></mrow><msub><mi>d</mi><mi>x</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">t = \frac{p&#x27;_x-0}{d_x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.53478em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.08968em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.214em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">x</span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>
</blockquote>
<p>当然根据模型物体来对面进行划分有可能还是不够，因为如果只是对一个物体进行判断还是会出现Teapot in stadium 的问题，那么就要对一个物体进行更细致的划分。<br>
<strong>Spatial Participation(空间划分)：</strong></p>
<ol>
<li><strong>Uniform Spatial Participation（均匀空间划分）：</strong> 就是把空间分隔成一个个均匀的格子，但是会产生一个问题：格子数量得设定为多少？如果格子太多那么效率就会低，如果格子太少那么简化没意义。</li>
</ol>
<blockquote>
<p>在业界常用的格子数量：#Cell=C*#obj 其中C为常数常为27</p>
</blockquote>
<ol start="2">
<li><strong>Spatial Participation：</strong> 这是一种非均匀的空间划分，有多种划分的方法。</li>
</ol>
<blockquote>
<ol>
<li>OCT-Tree（八叉树）：和二叉树相似，把每个空间和子空间平均划分为八个部分（数学中是叫八个卦象？）。</li>
<li>KD-Tree(k-dimentional tree):横竖交替划分子空间。</li>
<li>BSP-Tree: 思想也是交替划分空间但是是从不同的方向进行划分，不是很好计算。<br>
以上的算法都是用树来存储递归的查找三角形是否在子空间内，一直查到叶子节点为止。</li>
</ol>
</blockquote>
<p>采用空间划分会产生一些问题，比如对于同一个面如果被划分到了不同的空间，那么这个面算谁的，或者都算，但是这样就会极大的降低相应的效率。因此提出了对象划分的概念。<br>
<strong>Object Participation（物体划分）：</strong><br>
根据面来进行划分，可以有效解决上文提出的问题。<br>
就是取整个包围盒离中心最近的一个三角面来对整个节点（子空间）进行划分，通俗来讲就是一堆物体分成了两堆，在集合论中就是一个几何的划分。<br>
优化时的最优策略，根据最长的一个轴来对物体进行划分。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Geometry: Mesh Operation]]></title>
        <id>https://dream1ce.github.io/post/geometry-mesh-operation/</id>
        <link href="https://dream1ce.github.io/post/geometry-mesh-operation/">
        </link>
        <updated>2020-04-13T14:05:47.000Z</updated>
        <content type="html"><![CDATA[<h1 id="mesh-subdivision曲面细分">Mesh Subdivision（曲面细分）</h1>
<h3 id="loop-subdivisionloop细分">Loop Subdivision（Loop细分）</h3>
<p>Loop subdivision 是针对三角形面片而做的一种细分方法。<br>
<strong>第一步</strong> 把每条边的中点作为一个新的点。新的点在一条边上，一条边必定被两个三角形共享，在此定义被两个三角形共享的两个点为近点，剩余两个为远点。<br>
<strong>第二步</strong> 依照一定的规则更新新的点和旧的点相应坐标。<br>
<strong>更新规则如下</strong> 新点 = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><mn>8</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{8}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>远点之和+<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>3</mn><mn>8</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{3}{8}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>近点之和        旧点 = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mn>1</mn><mo>−</mo><mi>n</mi><mo>∗</mo><mi>u</mi><mo>)</mo><mi mathvariant="normal">自</mi><mi mathvariant="normal">己</mi><mo>+</mo><mi>u</mi><mo>∗</mo><mo>(</mo><mi mathvariant="normal">相</mi><mi mathvariant="normal">邻</mi><mi mathvariant="normal">点</mi><mi mathvariant="normal">之</mi><mi mathvariant="normal">和</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">(1-n*u)自己+u*(相邻点之和)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">u</span><span class="mclose">)</span><span class="mord cjk_fallback">自</span><span class="mord cjk_fallback">己</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathdefault">u</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord cjk_fallback">相</span><span class="mord cjk_fallback">邻</span><span class="mord cjk_fallback">点</span><span class="mord cjk_fallback">之</span><span class="mord cjk_fallback">和</span><span class="mclose">)</span></span></span></span></p>
<h3 id="catmall-clark-subdivision">Catmall-Clark Subdivision</h3>
<p>Catmall-Clark Subdivision 是针对一般平面更加通用的方法。（PS:Catmall是2020的图灵奖得主）<br>
<strong>新增点：</strong> Face point(原来多边形的中点)、Edge point（边中点）、New Vertex point(旧点调整之后的新顶点)<br>
<strong>计算公式：</strong></p>
<ol>
<li>Face point： <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>F</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">V_F=\frac{1}{n}\sum_{i=1}^NV_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.326231em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">V_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为之前面上的顶点</li>
<li>Edge point： 取最近的四个顶点包括面顶点求和</li>
<li>New Vertex point：取相邻边的中点坐标求平均<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∗</mo><mfrac><mn>1</mn><mi>n</mi></mfrac></mrow><annotation encoding="application/x-tex">*\frac{1}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord">∗</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>加上相邻的面的中点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∗</mo><mfrac><mn>2</mn><mi>n</mi></mfrac></mrow><annotation encoding="application/x-tex">*\frac{2}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord">∗</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>加上自己<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∗</mo><mfrac><mrow><mi>n</mi><mo>−</mo><mn>3</mn></mrow><mi>n</mi></mfrac></mrow><annotation encoding="application/x-tex">*\frac{n-3}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord">∗</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br>
<strong>性质：</strong> 不断迭代做曲面细分操作之后，奇异点（degree<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mpadded width="0px"><mo></mo></mpadded><mo>=</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">\not ={4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord"><span class="mord">4</span></span></span></span></span>）会是一个常数。</li>
</ol>
<h1 id="mesh-simplification曲面简化">Mesh Simplification(曲面简化)</h1>
<h3 id="edge-collapse边缘坍缩">Edge Collapse（边缘坍缩）</h3>
<p>原理就是让新点，离原先面的距离的平方最小，这里引入Quadric Error Metrics ,是一个最优化问题。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Geometry：Curve & Surface]]></title>
        <id>https://dream1ce.github.io/post/geometry/</id>
        <link href="https://dream1ce.github.io/post/geometry/">
        </link>
        <updated>2020-04-09T14:18:03.000Z</updated>
        <content type="html"><![CDATA[<p>在物体几何的表示中，一共有两种表示方法：隐式表示法和显式表示法。</p>
<h1 id="隐式表示法">隐式表示法</h1>
<ol>
<li>用数学公式表示如：圆的数学公式、球的数学公式....</li>
<li>CSG(Constractive Solid Geometry) 思想就是用最基本的图形去表示复杂图形，常用Boolean运算来表示图形。</li>
<li>Distance Function(距离公式) 也是基本图形组合，但是利用距离向量场可以得到更加圆滑的组合，算是一种扩充，但是不代表可以取代CSG。</li>
<li>分形 数学上用的多一些比如雪花、松树之类的。</li>
</ol>
<h1 id="显式表示">显式表示</h1>
<ol>
<li><strong>点云</strong> ：将模型用很多密集的点表示。不常用</li>
<li><strong>多边形面</strong>：常用会形成obj文件，3DMax、Maya等建模软件常用。</li>
<li><strong>Bezier Curve</strong> ： 使用几个控制点来表示一条曲线，简单理解：点在t变化的同时处于不同的位置，关于参数t的一个表达式。贝塞尔曲线恒一些特别的性质1.其一定经过控制点的起点和终点。2、仿射不变性：其在做仿射变换的时候，直接将线做仿射等于先将控制点做仿射变换在由变换后的点划线。3、凸包性质，贝塞尔曲线已知在以控制点形成的凸包中。</li>
<li><strong>Piecewise Bezier Curve</strong> : 逐段的贝塞尔曲线，为什么会有逐段的贝塞尔曲线呢？因为贝塞尔曲线不存在局部调整的性质，每当调整一个控制点就要对整个曲线进行调整，所以逐段的贝塞尔曲线因此而生，当然除了逐段的贝塞尔还有B-Splines等方法可以解决这个问题。</li>
<li><strong>Bezier Surfaces</strong>： 理解简单就是贝塞尔曲线上的点沿着垂直方向按照另一个贝塞尔曲线扫过就形成了贝塞尔曲面。有点像双线性插值。</li>
</ol>
<h1 id="mesh-operation-geometry-processing网格上的操作">Mesh Operation： Geometry Processing（网格上的操作）</h1>
<ol>
<li><strong>网格细分</strong> ：由一个多边形形成更多的多边形，来让细节更丰富。</li>
<li><strong>网格简化</strong> ：和上面的网格细分相反，是为了追求更高的性能将多变形数量减少。</li>
<li><strong>网格正规化</strong> ：让网格的每个三角形都趋于正三角形。会有很多好的性质。</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Shading:lecture 3(Texture Mapping)]]></title>
        <id>https://dream1ce.github.io/post/shadinglecture-3texture-mapping/</id>
        <link href="https://dream1ce.github.io/post/shadinglecture-3texture-mapping/">
        </link>
        <updated>2020-04-08T02:40:48.000Z</updated>
        <content type="html"><![CDATA[<p>材质映射是一种把高频信息、表面材质或颜色信息定义在图像或者模型上的一种方法。<br>
以下从小到大开始讲解 ：</p>
<h1 id="材质空间和模型">材质空间和模型</h1>
<p>在学习材质映射之前，先要明白材质映射和模型的关系。<br>
模型明显是三维的，其反应的是某个点或物体的空间信息，但是对于材质而言就相当与空间物体的一层表皮，所以二维的空间足以。<br>
材质常用的空间为：uv图，其记录的是材质贴图本身以及特定材质点对应的空间中的坐标信息。（PS:并非是每个点的信息）</p>
<h1 id="三角形内的材质映射">三角形内的材质映射</h1>
<p>由材质空间，我们假设已知三角形三个顶点的材质坐标，那么如何对三角形中的各个点进行材质的映射呢？</p>
<h4 id="重心坐标barycentic-coordinate">重心坐标(Barycentic Coordinate)</h4>
<p>为了让空间中的三角形和材质空间中的三角形的各个点能形成一一对应的关系，这里引入一个重心坐标的概念。设点<strong>D</strong> 为我们要求的点，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>α</mi><mo separator="true">,</mo><mi>β</mi><mo separator="true">,</mo><mi>γ</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">(\alpha,\beta,\gamma)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mclose">)</span></span></span></span> 为重心坐标，<strong>A</strong> 、<strong>B</strong> 、<strong>C</strong> 为我们已知的点，则要满足以下三个式子：</p>
<ol>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mi>A</mi><mo>+</mo><mi>β</mi><mi>B</mi><mo>+</mo><mi>γ</mi><mi>C</mi><mo>=</mo><mi>D</mi></mrow><annotation encoding="application/x-tex">\alpha A +\beta B + \gamma C =D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>+</mo><mi>β</mi><mo>+</mo><mi>γ</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\alpha + \beta + \gamma = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mi>β</mi><mi>γ</mi><mi mathvariant="normal">均</mi><mi mathvariant="normal">为</mi><mi mathvariant="normal">非</mi><mi mathvariant="normal">负</mi></mrow><annotation encoding="application/x-tex">\alpha \beta \gamma 均为非负</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mord cjk_fallback">均</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">非</span><span class="mord cjk_fallback">负</span></span></span></span><br>
如果已求出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mi>β</mi><mi>γ</mi></mrow><annotation encoding="application/x-tex">\alpha \beta \gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span></span></span></span>，那么对应的映射也就十分简单了（把材质空间的三个点的uv代进去即可）</li>
</ol>
<h6 id="如何求出重心坐标">如何求出重心坐标</h6>
<p>三角形对应分割面积之比即为重心坐标。（PS:网上可查）</p>
<h1 id="映射产生的问题">映射产生的问题</h1>
<p>在映射的过程中会产生一些问题比如材质过大或者材质过小的问题。</p>
<h3 id="问题材质过小-解决材质放大">问题：材质过小 解决：材质放大</h3>
<h5 id="就近nearst">就近（Nearst）</h5>
<p>这个就直接把离得最近的一个点的颜色拿来做填充就好了。（最简单）</p>
<h5 id="双线性插值biliner-interpolation">双线性插值（Biliner interpolation）</h5>
<p>这个插值就是在两个方向上对最近的点的颜色做一个加权平均。（权值可以自定）</p>
<h5 id="双三次线性插值bicubic-interpolation">双三次线性插值（Bicubic interpolation）</h5>
<p>这个思想和双线性插值有点类似但是他用了十六个相邻像素，四个一组，三次方程来进行插值。（计算量最大但是效果也最好，常常用在图片的放大和缩小）</p>
<h3 id="问题材质过大-解决材质缩小">问题：材质过大 解决：材质缩小</h3>
<h5 id="直接放弃法">直接放弃法</h5>
<p>将被缩去的像素直接丢弃，但是会出现问题，之间说了MSAA可以抗锯齿，这个就有点像MSAA的逆过程，但是会产生锯齿，影响画面效果</p>
<h5 id="放弃采样法">放弃采样法</h5>
<p>如果直接采样会产生锯齿，那么最简单的一个思路就是我不对特定点进行采样了，如果能直接知道附近颜色平均值那我就不用采样了，取平均即可</p>
<h5 id="mipmap">Mipmap</h5>
<p>如何求一个范围的平均值？将图像不断缩小（将图像模糊，四个像素混成一种颜色），每次缩小四倍，共产生<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>lg</mi><mo>⁡</mo><mn>2</mn></msub><mi>n</mi></mrow><annotation encoding="application/x-tex">\lg_2 n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93858em;vertical-align:-0.24414em;"></span><span class="mop"><span class="mop">l<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span></span></span></span> 幅缩略图，可直接用来做范围查找(range query)，所需内存是原来的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>3</mn><mn>4</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{3}{4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>根据像素的大小直接查询最接近的Mipmap。缺点：对于非正方形的图形效果不是很好。<br>
<img src="https://dream1ce.github.io/post-images/1586318373356.jpg" alt="" loading="lazy"></p>
<h5 id="各向异性过滤anisotropic-filtering">各向异性过滤(Anisotropic Filtering)</h5>
<p>思想和Mipmap类似但是除了同时将宽和高缩小之外，还各进行了高和宽独自的缩小。<br>
<img src="https://dream1ce.github.io/post-images/1586318290370.png" alt="" loading="lazy"></p>
<h5 id="ewa-filtering">EWA Filtering</h5>
<p>这个更加复杂是用圆形来覆盖原来不规则的形状。</p>
<h1 id="在做shading时的其他技术">在做Shading时的其他技术</h1>
<p>####Enviroment Map(环境贴图)<br>
环境贴图主要是用来解决同一个物体，有一部分的光被自己挡住了，一般在比较写实的风格中会用到。Environment Map 记录了纹理上的相对高度，可以用来计算光是否被其一部分挡住了。<br>
####Bump Map(法线贴图)<br>
法线贴图是用来在不增加三角形的前提下，来使整个图形看上去有更多的纹理，但是有一个缺点就是在图形 的边缘位置会露陷，毕竟产生的不是真的凹凸形状。</p>
<h4 id="displacement-map">Displacement Map</h4>
<p>和法线贴图类似但是其是真的将形状发生了改变，用了曲面细分的相关技术。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Shading:lecture 2(Pipeline)]]></title>
        <id>https://dream1ce.github.io/post/shadinglecture2pipeline/</id>
        <link href="https://dream1ce.github.io/post/shadinglecture2pipeline/">
        </link>
        <updated>2020-04-05T12:29:37.000Z</updated>
        <content type="html"><![CDATA[<p>以下的内容和硬件有些许关系。</p>
<h1 id="rendering-pipeline渲染管线">Rendering Pipeline(渲染管线)</h1>
<p>渲染管线又称渲染流水线，顾名思义其是用来表示从三维模型映射到二维图像直到呈现在屏幕上的整个过程。<br>
其大致的流程为：<strong>顶点数据-&gt;顶点着色器-&gt;曲面细分-&gt;几何着色器-&gt;图元组装-&gt;光栅化-&gt;片段着色器-&gt;测试混合阶段</strong></p>
<h4 id="顶点数据">顶点数据：</h4>
<p>顶点数据用来为后面的其他阶段提供顶点信息，用于后期的绘制。<br>
要注意的是在顶点数据阶段要向相应的图形图像接口表明是什么图元：常见的图元为点、线、三角面</p>
<h4 id="顶点着色器">顶点着色器：</h4>
<p>顶点着色器最主要进行坐标变换，从局部坐标到世界坐标、观测坐标、剪裁坐标的变换。在一些渲染方式中也会用来计算顶点的光照信息，如Groudaud Shading模型，但是效果不佳不常用。</p>
<h4 id="曲面细分">曲面细分：</h4>
<p>用镶嵌化技术对三角面进行细分，来增加三角面的个数。</p>
<h4 id="图元组装">图元组装：</h4>
<p>将输入的顶点信息组装成图元。</p>
<h4 id="光栅化">光栅化：</h4>
<p>将图形由连续转化为离散的像素点的过程。</p>
<h4 id="片段着色器">片段着色器：</h4>
<p>用来计算光照等其他可计算因素，来呈现屏幕上像素点最后的颜色。<br>
##注意：<br>
渲染管线的流程在不同的教科书中有不同的流程，以上划分仅仅为其中一个版本。</p>
<h1 id="shader着色器">Shader（着色器）</h1>
<p>Shader 中文名称为着色器，通俗的来讲就是负责绘制图像的内容的一种GPU程序。<br>
对于图形学来讲常用的Shader为Vertex Shader 和 Fragment Shader。<br>
以下列出其他Shader类型权当扩展：</p>
<ol>
<li>Geometry Shader：用来对于几何图形进行计算。</li>
<li>Compute Shader：一种通用的计算单元，能计算一些更复杂的逻辑。<br>
#显卡中的相应硬件：<br>
显卡中有大量的运算单元，用来专门执行相应类型的Shader，其处理器的类型均为SIMD（并不严谨），能在同时做大量并行的计算。</li>
</ol>
]]></content>
    </entry>
</feed>